{"version":3,"sources":["main.js","bookmarkEditController.js","bookmarkService.js","bookmarkViewController.js","filters.js","routes.js","sessionService.js","userEditController.js","userService.js","directives/angucomplete-alt.js","directives/customSelect2.js","directives/tagmanagerDirective.js","directives/ui-ace.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChjtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvzjfile":"main.js","sourcesContent":["/*jshint scripturl:true*/\n\nvar API_URL = window.location.origin + '/api/v1/';\n\n(function () {\n\n    //angular.module(\"pingMod\", [])\n    //    .run(function ($http, $interval) {\n    //        var TIME = 1000;\n    //        function ping() {\n    //            $http.get(\"/ping\");\n    //        }\n    //        $interval(ping, TIME);\n    //    });\n\n    angular.module('bookmarksApp', ['ngRoute', 'angucomplete-alt', 'ui.ace']);\n\n}());\n\n$(function () {\n    function generateBookmarkMe() {\n\n        function extractDomain(url) {\n            var domain;\n            //find & remove protocol (http, ftp, etc.) and get domain\n            if (url.indexOf(\"://\") > -1) {\n                domain = url.split('/')[2];\n            } else {\n                domain = url.split('/')[0];\n            }\n            //find & remove port number\n            domain = domain.split(':')[0];\n            return window.location.protocol + '//' + domain + '/';\n        }\n\n        var bookmarkMeText = '';\n        bookmarkMeText += '(';\n        bookmarkMeText += ' function() {';\n        bookmarkMeText += ' \tl=\"' + extractDomain(window.location.href) + '#/bookmark/add?title=\"+encodeURIComponent(document.title)+\"&link=\"+encodeURIComponent(window.location.href);';\n        bookmarkMeText += ' \tvar e=window.open(l+\"&window=1\",\"EasyBookmarkManager\",\"location=0,links=0,scrollbars=0,toolbar=0,width=594,height=600\");';\n        bookmarkMeText += ' }';\n        bookmarkMeText += ')()';\n\n        $('a.bookmark-me-link').attr('href', 'javascript:' + encodeURIComponent(bookmarkMeText));\n    }\n\n    generateBookmarkMe();\n});\n","(function () {\n\n    var bookmarkEditController = function ($scope, $location, $routeParams, $http, $interval, userService,\n                                           bookmarkService, $window) {\n\n        $scope.viewReady = false;\n        $scope.errorMessage = '';\n        $scope.goodMessage = '';\n        $scope.globalGoodMessage = '';\n        $scope.globalErrorMessage = '';\n        $scope.newItem = false;\n        $scope.fromWindow = false;\n        $scope.canViewSnippet = false;\n        $scope.categories = [];\n        $scope.busyWithAction = false;\n        $scope.duplicates = [];\n\n        $scope.bookmark = {\n            favourite: false,\n            title: $routeParams.title || '',\n            link: $routeParams.link || '',\n            snippet: '',\n            category: '',\n            tags: []\n        };\n\n        this.run = function () {\n\n            bookmarkService\n                .fetchCategories()\n                .then(function (response) {\n                    if (response.result == 'ok') {\n                        $scope.categories = response.data.categories;\n                    }\n                });\n\n            if ($scope.newItem) {\n                bookmarkService\n                    .checkDuplicates($scope.bookmark)\n                    .then(function (response) {\n                        if (response.result == 'ok') {\n                            if (typeof response.data !== 'undefined') {\n                                $scope.duplicates = response.data.bookmarks;\n                            }\n                        }\n                    });\n            } else {\n                bookmarkService\n                    .fetchBookmark($routeParams.bookmarkId || '')\n                    .then(function (response) {\n                        $scope.globalErrorMessage = '';\n                        if (response.result != 'ok') {\n                            $scope.globalErrorMessage = response.message;\n                            $scope.viewReady = false;\n                            return;\n                        }\n\n                        $scope.bookmark = response.data.bookmark;\n                        var snippet = $scope.bookmark.snippet || '';\n                        if (snippet !== '') {\n                            $scope.canViewSnippet = true;\n                        }\n\n                    });\n\n            }\n\n            $scope.viewReady = true;\n\n        };\n\n        $scope.checkStatus = function () {\n            if (\n                typeof $routeParams.bookmarkId == 'undefined' ||\n                $routeParams.bookmarkId === ''\n            ) {\n                $scope.newItem = true;\n            }\n\n            // hide header if opened from window\n            if ($routeParams.window == 1) {\n                $scope.fromWindow = true;\n                $('div.row.container-header h1 .hide-for-window').hide();\n            }\n        };\n\n        // @todo find better solution to complete the add bookmark process\n        $scope.closeWindow = function () {\n            window.close();\n            //open(location, '_self').close();\n        };\n\n        $scope.cancelUpdate = function () {\n            $scope.busyWithAction = true;\n            $location.path('/');\n        };\n\n        $scope.enableSnippet = function () {\n            $scope.canViewSnippet = true;\n        };\n\n        $scope.deleteBookmark = function () {\n            $scope.busyWithAction = true;\n            $scope.viewReady = false;\n            bookmarkService\n                .deleteBookmark($routeParams.bookmarkId || '', $scope.bookmark)\n                .then(function (response) {\n                    $scope.errorMessage = '';\n                    if (response.result != 'ok') {\n                        $scope.errorMessage = response.message;\n                        $scope.viewReady = true;\n                        $scope.busyWithAction = false;\n                        return;\n                    }\n                    $scope.globalGoodMessage = 'Deleted, redirecting...';\n                    var interval = $interval(function () {\n                        $interval.cancel(interval);\n                        $location.path('/');\n                    }, 1000);\n                });\n        };\n\n        $scope.categorySelect = function (selected) {\n            if (selected) {\n                if (typeof selected.originalObject === 'object') {\n                    $scope.bookmark.category = selected.originalObject.name;\n                } else {\n                    $scope.bookmark.category = selected.originalObject;\n                }\n            } else {\n                $scope.bookmark.category = '';\n            }\n        };\n\n        $scope.createBookmark = function () {\n            $scope.busyWithAction = true;\n            $scope.goodMessage = '';\n            $scope.errorMessage = '';\n            bookmarkService\n                .createBookmark($scope.bookmark)\n                .then(function (response) {\n                    $scope.errorMessage = '';\n                    if (response.result != 'ok') {\n                        $scope.errorMessage = response.message;\n                        $scope.busyWithAction = false;\n                        return;\n                    }\n\n                    var interval;\n\n                    if ($scope.newItem && $scope.fromWindow == 1) {\n                        $scope.goodMessage = 'Created, closing...';\n                        interval = $interval(function () {\n                            $interval.cancel(interval);\n                            window.close();\n                        }, 1000);\n                        return;\n                    }\n\n                    $scope.goodMessage = 'Created';\n                    interval = $interval(function () {\n                        $interval.cancel(interval);\n                        $location.path('/bookmark/edit/' + response.data.bookmark.id);\n                    }, 1000);\n                });\n        };\n\n        $scope.updateBookmark = function (goBack) {\n            $scope.busyWithAction = true;\n            $scope.goodMessage = '';\n            $scope.errorMessage = '';\n\n            bookmarkService\n                .updateBookmark($routeParams.bookmarkId || '', $scope.bookmark)\n                .then(function (response) {\n                    $scope.errorMessage = '';\n                    if (response.result != 'ok') {\n                        $scope.errorMessage = response.message;\n                        $scope.busyWithAction = false;\n                        return;\n                    }\n                    $scope.bookmark = response.data.bookmark;\n                    $scope.goodMessage = 'Updated';\n                    $scope.busyWithAction = false;\n                    if (goBack) {\n                        $scope.busyWithAction = true;\n                        $location.path('/');\n                    }\n                });\n        };\n\n        $scope.checkStatus();\n\n        var that = this;\n\n        userService\n            .checkLoginStatus()\n            .then(function (response) {\n                $scope.errorMessage = '';\n                if (response.result != 'ok') {\n                    if ($scope.newItem && $scope.fromWindow) {\n                        $scope.globalErrorMessage = 'No session found, please login via the browser.';\n                        return;\n                    }\n\n                    $scope.globalErrorMessage = response.message;\n                    $window.location = '/login';\n\n                    return;\n                }\n                that.run();\n            });\n\n    };\n\n    angular.module('bookmarksApp')\n        .controller('bookmarkEditController',\n        ['$scope', '$location', '$routeParams', '$http', '$interval', 'userService', 'bookmarkService',\n            '$window', bookmarkEditController]);\n\n}());\n","(function () {\n\n    var bookmarkService = function ($location, $http) {\n\n        var service = {\n\n            fetchCategoriesAndTags: function () {\n                return $http\n                    .get(API_URL + 'bookmarks/categories-and-tags')\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            fetchCategories: function () {\n                return $http\n                    .get(API_URL + 'categories')\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            fetchTags: function () {\n                return $http\n                    .get(API_URL + 'tags')\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            fetchFilteredBookmarks: function (categories, tags, search, page, limit) {\n                return $http\n                    .get(API_URL +\n                        'bookmarks?' +\n                        'categories=' + categories +\n                        '&tags=' + tags +\n                        '&search=' + search +\n                        '&page=' + page +\n                        '&limit=' + limit)\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            fetchBookmark: function (bookmarkId) {\n                return $http\n                    .get(API_URL + 'bookmark/' + bookmarkId)\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            createBookmark: function (data) {\n                return $http\n                    .post(API_URL + 'bookmark/create?' + $.param(data))\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            checkDuplicates: function (data) {\n                return $http\n                    .get(API_URL + 'bookmarks/duplicates?' + $.param(data))\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            updateBookmark: function (bookmarkId, data) {\n                return $http\n                    .put(API_URL + 'bookmark/' + bookmarkId + '?' + $.param(data))\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            deleteBookmark: function (bookmarkId, data) {\n                return $http\n                    .delete(API_URL + 'bookmark/' + bookmarkId + '?' + $.param(data))\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            importBookmarks: function (data) {\n                return $http\n                    .post(API_URL + 'bookmarks/import?', data, { //$.param(user), data, {\n                        withCredentials: true,\n                        headers: {'Content-Type': undefined},\n                        transformRequest: angular.identity\n                    })\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            getExportBookmarksUrl: function () {\n                return API_URL + 'bookmarks/export';\n            },\n        };\n\n        return service;\n    };\n\n    angular.module('bookmarksApp')\n        .service('bookmarkService', ['$location', '$http', bookmarkService]);\n\n}());\n","(function () {\n\n    var bookmarkViewController = function ($scope, $location, $http, userService, bookmarkService, sessionService, $interval, $timeout, $window) {\n\n        $scope.categories = [];\n        $scope.tags = [];\n        $scope.bookmarks = [];\n        $scope.viewReady = false;\n        $scope.busyImporting = false;\n        $scope.loadingBookmarks = true;\n        $scope.badDataResponse = '';\n        $scope.selectedCategories = [];\n        $scope.selectedTags = [];\n        $scope.bookmarkResults = {\n            page: 1,\n            maxPages: 0,\n            limit: 10,\n            totalCount: 0\n        };\n        $scope.maxCloudTagValue = 0;\n\n        $scope.globalErrorMessage = '';\n        $scope.globalGoodMessage = '';\n\n        var filterTextTimeout;\n        var session = sessionService.getModel();\n\n        $scope.search = session.search;\n        $scope.bookmarkResults.page = session.pageNo;\n\n        this.run = function () {\n\n            userService\n                .checkLoginStatus()\n                .then(function (response) {\n                    $scope.errorMessage = '';\n                    if (response.result != 'ok') {\n                        $scope.globalErrorMessage = response.message;\n                        $window.location = '/login';\n                        return;\n                    }\n\n                    bookmarkService\n                        .fetchCategoriesAndTags()\n                        .then(function (response) {\n                            if (response.result == 'ok') {\n                                $scope.categories = response.data.categories;\n\n                                for(var i = 5; i < $scope.categories.length; i++){\n                                    $scope.categories[i].hidden = true;\n                                }\n\n                                // sort tags randomly\n                                $scope.tags = response.data.tags.sort(function() {\n                                    return 0.5 - Math.random();\n                                });\n                            }\n                        });\n\n                    $scope.fetchFilteredBookmarks();\n\n                    $scope.viewReady = true;\n\n                });\n        };\n\n        // Set all categories to be shown when clicking on load more link.\n        $scope.loadMore = function () {\n            for(var i = 5; i < $scope.categories.length; i++){\n                $scope.categories[i].hidden = false;\n            }\n        };\n\n        $scope.clearSearch = function () {\n            $scope.search = '';\n            $scope.searchKeyUp('');\n            $('#searchText').val('');\n        };\n\n        $scope.fetchFilteredBookmarks = function () {\n            $scope.bookmarks = null;\n            $scope.loadingBookmarks = true;\n            $scope.badDataResponse = '';\n\n            bookmarkService\n                .fetchFilteredBookmarks(\n                    $scope.selectedCategories,\n                    $scope.selectedTags,\n                    $scope.search,\n                    $scope.bookmarkResults.page,\n                    $scope.bookmarkResults.limit\n            )\n                .then(function (response) {\n                    $scope.loadingBookmarks = false;\n                    if (response.result == 'ok') {\n                        $scope.bookmarks = response.data.bookmarks;\n                        $scope.bookmarkResults.maxPages = Math.ceil(response.data.totalCount / $scope.bookmarkResults.limit);\n                        $scope.bookmarkResults.totalCount = response.data.totalCount;\n                    } else {\n                        $scope.badDataResponse = response.message;\n                    }\n                });\n        };\n\n        $scope.toggleTag = function (tag) {\n            $scope.bookmarkResults.page = 1;\n            tag.selected = !tag.selected;\n            if ($scope.selectedTags.indexOf(tag.name) != -1) {\n                $scope.selectedTags.splice($scope.selectedTags.indexOf(tag.name), 1);\n            } else {\n                $scope.selectedTags.push(tag.name);\n            }\n            $scope.fetchFilteredBookmarks();\n        };\n\n        $scope.calculateMaxCloudTagValue = function () {\n            for (var i=0; i<$scope.tags.length; i++) {\n                if (parseInt($scope.tags[i].count) > parseInt($scope.maxCloudTagValue)) {\n                    $scope.maxCloudTagValue = $scope.tags[i].count;\n                }\n            }\n        };\n\n        $scope.getCloudClass = function (tag) {\n            // Return more readable size if there are not many tags.\n            if ($scope.tags.length < 6) {\n                return 'tag1';\n            }\n\n            var maxVal = 5;\n            var num = Math.ceil(tag.count * maxVal / $scope.maxCloudTagValue);\n\n            return 'tag' + num;\n        };\n\n        $scope.toggleCategory = function (category) {\n            $scope.bookmarkResults.page = 1;\n            category.selected = !category.selected;\n            if ($scope.selectedCategories.indexOf(category.name) != -1) {\n                $scope.selectedCategories.splice($scope.selectedCategories.indexOf(category.name), 1);\n            } else {\n                $scope.selectedCategories.push(category.name);\n            }\n            $scope.fetchFilteredBookmarks();\n        };\n\n        $scope.searchKeyUp = function (search) {\n            $scope.bookmarkResults.page = 1;\n            if (filterTextTimeout) {\n                $timeout.cancel(filterTextTimeout);\n            }\n            filterTextTimeout = $timeout(function () {\n                $scope.search = search;\n                session.search = search;\n                sessionService.setModel(session);\n                $scope.fetchFilteredBookmarks();\n            }, 250); // delay 250 ms\n        };\n\n        $scope.newBookmark = function () {\n            $location.path('/bookmark/add');\n        };\n\n        $scope.logout = function () {\n            $window.location = '/auth/logout';\n        };\n\n        $scope.nextPage = function () {\n            $scope.bookmarkResults.page++;\n            session.pageNo = $scope.bookmarkResults.page;\n            sessionService.setModel(session);\n            $scope.fetchFilteredBookmarks();\n        };\n\n        $scope.prevPage = function () {\n            $scope.bookmarkResults.page--;\n            session.pageNo = $scope.bookmarkResults.page;\n            sessionService.setModel(session);\n            $scope.fetchFilteredBookmarks();\n        };\n\n        $scope.editUser = function () {\n            $location.path('/user/edit');\n        };\n\n        $scope.editBookmark = function (event, bookmark) {\n            event.stopPropagation();\n            event.preventDefault();\n            $location.path('/bookmark/edit/' + bookmark.id);\n            return false;\n        };\n\n        $scope.gotoBookmark = function (event, bookmark) {\n            event.stopPropagation();\n            event.preventDefault();\n            if (bookmark.link) {\n                var win = window.open(bookmark.link, '_blank');\n                win.focus();\n            } else {\n                $scope.editBookmark(event, bookmark);\n            }\n        };\n\n        $scope.exportData = function () {\n            $window.location = bookmarkService.getExportBookmarksUrl();\n        };\n\n        $scope.uploadFile = function (files) {\n            $scope.busyImporting = true;\n            $scope.globalErrorMessage = '';\n            $scope.globalGoodMessage = '';\n\n            var fd = new FormData();\n            fd.append(\"bookmarkfile\", files[0]);\n\n            bookmarkService\n                .importBookmarks(fd)\n                .then(function (response) {\n                    $scope.busyImporting = false;\n                    if (response.result != 'ok') {\n                        $scope.globalErrorMessage = response.message;\n                        return;\n                    }\n                    $scope.globalGoodMessage = 'Imported ' + response.data.imported + ' record(s), reloading...';\n                    var interval = $interval(function () {\n                        $interval.cancel(interval);\n                        $window.location.reload();\n                    }, 1500);\n                });\n        };\n\n        this.run();\n\n    };\n\n    angular.module('bookmarksApp')\n        .controller('bookmarkViewController',\n        ['$scope', '$location', '$http', 'userService', 'bookmarkService', 'sessionService', '$interval', '$timeout', '$window',\n            bookmarkViewController]);\n\n}());\n","(function () {\n\n    var filterByTags = function () {\n        return function (items, tags, categories) {\n            var filtered = [];\n\n            (items || []).forEach(function (item) {\n\n                var tagExist = false;\n                (item.tags || []).forEach(function (itemTag) {\n                    if (tags.indexOf(itemTag) != -1) {\n                        tagExist = true;\n                    }\n                });\n\n                var categoryExist = false;\n\n                if (categories.indexOf(item.category) != -1) {\n                    categoryExist = true;\n                }\n\n                if (categories.length === 0 && tags.length === 0) {\n                    filtered.push(item);\n                } else if (tags.length === 0 && categoryExist) {\n                    filtered.push(item);\n                } else if (categories.length === 0 && tagExist) {\n                    filtered.push(item);\n                } else if (categoryExist && tagExist) {\n                    filtered.push(item);\n                }\n\n            });\n            return filtered;\n        };\n    };\n\n    var cut = function () {\n        return function (value, wordwise, max, tail) {\n            if (!value) return '';\n\n            max = parseInt(max, 10);\n            if (!max) return value;\n            if (value.length <= max) return value;\n\n            value = value.substr(0, max);\n            if (wordwise) {\n                var lastspace = value.lastIndexOf(' ');\n                if (lastspace != -1) {\n                    value = value.substr(0, lastspace);\n                }\n            }\n\n            return value + (tail || ' …');\n        };\n    };\n\n    angular.module('bookmarksApp')\n        .filter('filterByTags', filterByTags);\n\n    angular.module('bookmarksApp')\n        .filter('cut', cut);\n\n}());\n","(function () {\n\n    var routes = function ($routeProvider) {\n        $routeProvider.\n            when('/', {\n                templateUrl: '/views/bookmark-view.html',\n                controller: 'bookmarkViewController'\n            }).\n            when('/bookmark/edit/:bookmarkId', {\n                templateUrl: '/views/bookmark-edit.html',\n                controller: 'bookmarkEditController'\n            }).\n            when('/bookmark/add', {\n                templateUrl: '/views/bookmark-edit.html',\n                controller: 'bookmarkEditController'\n            }).\n            when('/user/edit', {\n                templateUrl: '/views/user-edit.html',\n                controller: 'userEditController'\n            }).\n            otherwise({\n                redirectTo: '/login'\n            });\n    };\n\n    angular.module('bookmarksApp')\n        .config(['$routeProvider', routes]);\n\n}());\n","(function () {\n\n    var sessionService = function () {\n\n        var service = {\n\n            model: {\n                theme: '',\n                search: '',\n                pageNo: 1\n            },\n\n            setModel: function (data) {\n                this.model = data;\n            },\n\n            getModel: function () {\n                return this.model;\n            },\n\n            clearModel: function () {\n                this.model = {\n                    theme: '',\n                    search: '',\n                    pageNo: 1\n                };\n            }\n\n        };\n\n        return service;\n\n    };\n\n    angular.module('bookmarksApp')\n        .service('sessionService', [sessionService]);\n\n}());\n","(function () {\n\n    var userEditController = function ($scope, $location, $http, $interval, userService) {\n\n        $scope.errorMessage = '';\n        $scope.goodMessage = '';\n        $scope.busyWithAction = true;\n\n        $scope.profile = {\n            name: '',\n            email: '',\n            theme: '',\n            password1: '',\n            password2: ''\n        };\n\n        var theme = localStorage.getItem('theme') || 'bootstrap-yeti';\n        $scope.profile.theme = theme;\n\n        userService\n            .getDetails()\n            .then(function (response) {\n                $scope.busyWithAction = false;\n                if (response.result != 'ok') {\n                    $scope.errorMessage = response.message;\n                    return;\n                }\n                $scope.profile.name = response.data.user.name;\n                $scope.profile.email = response.data.user.email;\n            });\n\n        $scope.updateUser = function () {\n            $scope.errorMessage = '';\n            $scope.goodMessage = '';\n\n            if ($scope.profile.password1.length > 0) {\n                if ($scope.profile.password1.length < 5) {\n                    $scope.errorMessage = 'Your new password must be at least 5 characters';\n                    return;\n                }\n                if ($scope.profile.password1.search(/[a-z]/i) < 0) {\n                    $scope.errorMessage = 'Your new password must contain at least one letter';\n                    return;\n                }\n                if ($scope.profile.password1.search(/[0-9]/) < 0) {\n                    $scope.errorMessage = 'Your new password must contain at least one digit';\n                    return;\n                }\n                if ($scope.profile.password1 != $scope.profile.password2) {\n                    $scope.errorMessage = 'Both passwords must match';\n                    return;\n                }\n            }\n\n            $scope.busyWithAction = true;\n\n            userService\n                .updateDetails($scope.profile)\n                .then(function (response) {\n                    $scope.busyWithAction = false;\n                    if (response.result != 'ok') {\n                        $scope.errorMessage = response.message;\n                        return;\n                    }\n                    $scope.goodMessage = 'Details updated.';\n                    $scope.profile.password1 = '';\n                    $scope.profile.password2 = '';\n                });\n        };\n\n        $scope.changeTheme = function (item) {\n            localStorage.setItem('theme', item);\n            $scope.profile.theme = item;\n            $('.custom-css').remove();\n            loadTheme();\n        };\n\n        $scope.cancelUpdate = function () {\n            $scope.busyWithAction = true;\n            $location.path('/');\n        };\n    };\n\n    angular.module('bookmarksApp')\n        .controller('userEditController',\n        ['$scope', '$location', '$http', '$interval', 'userService', userEditController]);\n\n}());\n","(function () {\n\n    var userService = function ($location, $http) {\n\n        var service = {\n\n            getDetails: function () {\n                return $http\n                    .get(API_URL + 'user')\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            updateDetails: function (data) {\n                return $http\n                    .put(API_URL + 'user?' + $.param(data))\n                    .then(function (response) {\n                        return response.data;\n                    });\n            },\n\n            checkLoginStatus: function () {\n                return $http\n                    .get(API_URL + 'user/status?')\n                    .then(function (response) {\n                        return response.data;\n                    });\n            }\n        };\n\n        return service;\n\n    };\n\n    angular.module('bookmarksApp')\n        .service('userService', ['$location', '$http', userService]);\n\n}());\n","/*\n * angucomplete-alt\n * Autocomplete directive for AngularJS\n * This is a fork of Daryl Rowland's angucomplete with some extra features.\n * By Hidenari Nozaki\n */\n\n/*! Copyright (c) 2014 Hidenari Nozaki and contributors | Licensed under the MIT license */\n\n'use strict';\n\n(function (root, factory) {\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(require('angular'));\n\t} else if (typeof define === 'function' && define.amd) {\n\t\t// AMD\n\t\tdefine(['angular'], factory);\n\t} else {\n\t\t// Global Variables\n\t\tfactory(root.angular);\n\t}\n}(window, function (angular) {\n\n\tangular.module('angucomplete-alt', []).directive('angucompleteAlt', ['$q', '$parse', '$http', '$sce', '$timeout', '$templateCache', '$interpolate', function ($q, $parse, $http, $sce, $timeout, $templateCache, $interpolate) {\n\t\t// keyboard events\n\t\tvar KEY_DW  = 40;\n\t\tvar KEY_RT  = 39;\n\t\tvar KEY_UP  = 38;\n\t\tvar KEY_LF  = 37;\n\t\tvar KEY_ES  = 27;\n\t\tvar KEY_EN  = 13;\n\t\tvar KEY_TAB =  9;\n\n\t\tvar MIN_LENGTH = 3;\n\t\tvar MAX_LENGTH = 524288;  // the default max length per the html maxlength attribute\n\t\tvar PAUSE = 500;\n\t\tvar BLUR_TIMEOUT = 200;\n\n\t\t// string constants\n\t\tvar REQUIRED_CLASS = 'autocomplete-required';\n\t\tvar TEXT_SEARCHING = 'Searching...';\n\t\tvar TEXT_NORESULTS = 'No results found';\n\t\tvar TEMPLATE_URL = '/angucomplete-alt/index.html';\n\n\t\t// Set the default template for this directive\n\t\t$templateCache.put(TEMPLATE_URL,\n\t\t\t'<div class=\"angucomplete-holder\" ng-class=\"{\\'angucomplete-dropdown-visible\\': showDropdown}\">' +\n\t\t\t'  <input id=\"{{id}}_value\" name=\"{{inputName}}\" ng-class=\"{\\'angucomplete-input-not-empty\\': notEmpty}\" ng-model=\"searchStr\" ng-disabled=\"disableInput\" type=\"{{inputType}}\" placeholder=\"{{placeholder}}\" maxlength=\"{{maxlength}}\" ng-focus=\"onFocusHandler()\" class=\"{{inputClass}}\" ng-focus=\"resetHideResults()\" ng-blur=\"hideResults($event)\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" ng-change=\"inputChangeHandler(searchStr)\"/>' +\n\t\t\t'  <div id=\"{{id}}_dropdown\" class=\"angucomplete-dropdown\" ng-show=\"showDropdown\">' +\n\t\t\t'    <div class=\"angucomplete-searching\" ng-show=\"searching\" ng-bind=\"textSearching\"></div>' +\n\t\t\t'    <div class=\"angucomplete-searching\" ng-show=\"!searching && (!results || results.length == 0)\" ng-bind=\"textNoResults\"></div>' +\n\t\t\t'    <div class=\"angucomplete-row\" ng-repeat=\"result in results\" ng-click=\"selectResult(result)\" ng-mouseenter=\"hoverRow($index)\" ng-class=\"{\\'angucomplete-selected-row\\': $index == currentIndex}\">' +\n\t\t\t'      <div ng-if=\"imageField\" class=\"angucomplete-image-holder\">' +\n\t\t\t'        <img ng-if=\"result.image && result.image != \\'\\'\" ng-src=\"{{result.image}}\" class=\"angucomplete-image\"/>' +\n\t\t\t'        <div ng-if=\"!result.image && result.image != \\'\\'\" class=\"angucomplete-image-default\"></div>' +\n\t\t\t'      </div>' +\n\t\t\t'      <div class=\"angucomplete-title\" ng-if=\"matchClass\" ng-bind-html=\"result.title\"></div>' +\n\t\t\t'      <div class=\"angucomplete-title\" ng-if=\"!matchClass\">{{ result.title }}</div>' +\n\t\t\t'      <div ng-if=\"matchClass && result.description && result.description != \\'\\'\" class=\"angucomplete-description\" ng-bind-html=\"result.description\"></div>' +\n\t\t\t'      <div ng-if=\"!matchClass && result.description && result.description != \\'\\'\" class=\"angucomplete-description\">{{result.description}}</div>' +\n\t\t\t'    </div>' +\n\t\t\t'  </div>' +\n\t\t\t'</div>'\n\t\t);\n\n\t\tfunction link(scope, elem, attrs, ctrl) {\n\t\t\tvar inputField = elem.find('input');\n\t\t\tvar minlength = MIN_LENGTH;\n\t\t\tvar searchTimer = null;\n\t\t\tvar hideTimer;\n\t\t\tvar requiredClassName = REQUIRED_CLASS;\n\t\t\tvar responseFormatter;\n\t\t\tvar validState = null;\n\t\t\tvar httpCanceller = null;\n\t\t\tvar dd = elem[0].querySelector('.angucomplete-dropdown');\n\t\t\tvar isScrollOn = false;\n\t\t\tvar mousedownOn = null;\n\t\t\tvar unbindInitialValue;\n\t\t\tvar displaySearching;\n\t\t\tvar displayNoResults;\n\n\t\t\telem.on('mousedown', function(event) {\n\t\t\t\tif (event.target.id) {\n\t\t\t\t\tmousedownOn = event.target.id;\n\t\t\t\t\tif (mousedownOn === scope.id + '_dropdown') {\n\t\t\t\t\t\tdocument.body.addEventListener('click', clickoutHandlerForDropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmousedownOn = event.target.className;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.currentIndex = scope.focusFirst ? 0 : null;\n\t\t\tscope.searching = false;\n\t\t\tunbindInitialValue = scope.$watch('initialValue', function(newval) {\n\t\t\t\tif (newval) {\n\t\t\t\t\t// remove scope listener\n\t\t\t\t\tunbindInitialValue();\n\t\t\t\t\t// change input\n\t\t\t\t\thandleInputChange(newval, true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.$watch('fieldRequired', function(newval, oldval) {\n\t\t\t\tif (newval !== oldval) {\n\t\t\t\t\tif (!newval) {\n\t\t\t\t\t\tctrl[scope.inputName].$setValidity(requiredClassName, true);\n\t\t\t\t\t}\n\t\t\t\t\telse if (!validState || scope.currentIndex === -1) {\n\t\t\t\t\t\thandleRequired(false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thandleRequired(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.$on('angucomplete-alt:clearInput', function (event, elementId) {\n\t\t\t\tif (!elementId || elementId === scope.id) {\n\t\t\t\t\tscope.searchStr = null;\n\t\t\t\t\tcallOrAssign();\n\t\t\t\t\thandleRequired(false);\n\t\t\t\t\tclearResults();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.$on('angucomplete-alt:changeInput', function (event, elementId, newval) {\n\t\t\t\tif (!!elementId && elementId === scope.id) {\n\t\t\t\t\thandleInputChange(newval);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction handleInputChange(newval, initial) {\n\t\t\t\tif (newval) {\n\t\t\t\t\tif (typeof newval === 'object') {\n\t\t\t\t\t\tscope.searchStr = extractTitle(newval);\n\t\t\t\t\t\tcallOrAssign({originalObject: newval});\n\t\t\t\t\t} else if (typeof newval === 'string' && newval.length > 0) {\n\t\t\t\t\t\tscope.searchStr = newval;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (console && console.error) {\n\t\t\t\t\t\t\tconsole.error('Tried to set ' + (!!initial ? 'initial' : '') + ' value of angucomplete to', newval, 'which is an invalid value');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\thandleRequired(true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// #194 dropdown list not consistent in collapsing (bug).\n\t\t\tfunction clickoutHandlerForDropdown(event) {\n\t\t\t\tmousedownOn = null;\n\t\t\t\tscope.hideResults(event);\n\t\t\t\tdocument.body.removeEventListener('click', clickoutHandlerForDropdown);\n\t\t\t}\n\n\t\t\t// for IE8 quirkiness about event.which\n\t\t\tfunction ie8EventNormalizer(event) {\n\t\t\t\treturn event.which ? event.which : event.keyCode;\n\t\t\t}\n\n\t\t\tfunction callOrAssign(value) {\n\t\t\t\tif (typeof scope.selectedObject === 'function') {\n\t\t\t\t\tscope.selectedObject(value);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscope.selectedObject = value;\n\t\t\t\t}\n\n\t\t\t\tif (value) {\n\t\t\t\t\thandleRequired(true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thandleRequired(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction callFunctionOrIdentity(fn) {\n\t\t\t\treturn function(data) {\n\t\t\t\t\treturn scope[fn] ? scope[fn](data) : data;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfunction setInputString(str) {\n\t\t\t\tcallOrAssign({originalObject: str});\n\n\t\t\t\tif (scope.clearSelected) {\n\t\t\t\t\tscope.searchStr = null;\n\t\t\t\t}\n\t\t\t\tclearResults();\n\t\t\t}\n\n\t\t\tfunction extractTitle(data) {\n\t\t\t\t// split title fields and run extractValue for each and join with ' '\n\t\t\t\treturn scope.titleField.split(',')\n\t\t\t\t\t.map(function(field) {\n\t\t\t\t\t\treturn extractValue(data, field);\n\t\t\t\t\t})\n\t\t\t\t\t.join(' ');\n\t\t\t}\n\n\t\t\tfunction extractValue(obj, key) {\n\t\t\t\tvar keys, result;\n\t\t\t\tif (key) {\n\t\t\t\t\tkeys= key.split('.');\n\t\t\t\t\tresult = obj;\n\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\tresult = result[keys[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = obj;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tfunction findMatchString(target, str) {\n\t\t\t\tvar result, matches, re;\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n\t\t\t\t// Escape user input to be treated as a literal string within a regular expression\n\t\t\t\tre = new RegExp(str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n\t\t\t\tif (!target) { return; }\n\t\t\t\tif (!target.match || !target.replace) { target = target.toString(); }\n\t\t\t\tmatches = target.match(re);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult = target.replace(re,\n\t\t\t\t\t\t'<span class=\"'+ scope.matchClass +'\">'+ matches[0] +'</span>');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = target;\n\t\t\t\t}\n\t\t\t\treturn $sce.trustAsHtml(result);\n\t\t\t}\n\n\t\t\tfunction handleRequired(valid) {\n\t\t\t\tscope.notEmpty = valid;\n\t\t\t\tvalidState = scope.searchStr;\n\t\t\t\tif (scope.fieldRequired && ctrl && scope.inputName) {\n\t\t\t\t\tctrl[scope.inputName].$setValidity(requiredClassName, valid);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction keyupHandler(event) {\n\t\t\t\tvar which = ie8EventNormalizer(event);\n\t\t\t\tif (which === KEY_LF || which === KEY_RT) {\n\t\t\t\t\t// do nothing\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (which === KEY_UP || which === KEY_EN) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse if (which === KEY_DW) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (!scope.showDropdown && scope.searchStr && scope.searchStr.length >= minlength) {\n\t\t\t\t\t\tinitResults();\n\t\t\t\t\t\tscope.searching = true;\n\t\t\t\t\t\tsearchTimerComplete(scope.searchStr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (which === KEY_ES) {\n\t\t\t\t\tclearResults();\n\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\tinputField.val(scope.searchStr);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (minlength === 0 && !scope.searchStr) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!scope.searchStr || scope.searchStr === '') {\n\t\t\t\t\t\tscope.showDropdown = false;\n\t\t\t\t\t} else if (scope.searchStr.length >= minlength) {\n\t\t\t\t\t\tinitResults();\n\n\t\t\t\t\t\tif (searchTimer) {\n\t\t\t\t\t\t\t$timeout.cancel(searchTimer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.searching = true;\n\n\t\t\t\t\t\tsearchTimer = $timeout(function() {\n\t\t\t\t\t\t\tsearchTimerComplete(scope.searchStr);\n\t\t\t\t\t\t}, scope.pause);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (validState && validState !== scope.searchStr && !scope.clearSelected) {\n\t\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\t\tcallOrAssign();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction handleOverrideSuggestions(event) {\n\t\t\t\tif (scope.overrideSuggestions &&\n\t\t\t\t\t!(scope.selectedObject && scope.selectedObject.originalObject === scope.searchStr)) {\n\t\t\t\t\tif (event) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\n\t\t\t\t\t// cancel search timer\n\t\t\t\t\t$timeout.cancel(searchTimer);\n\t\t\t\t\t// cancel http request\n\t\t\t\t\tcancelHttpRequest();\n\n\t\t\t\t\tsetInputString(scope.searchStr);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction dropdownRowOffsetHeight(row) {\n\t\t\t\tvar css = getComputedStyle(row);\n\t\t\t\treturn row.offsetHeight +\n\t\t\t\t\tparseInt(css.marginTop, 10) + parseInt(css.marginBottom, 10);\n\t\t\t}\n\n\t\t\tfunction dropdownHeight() {\n\t\t\t\treturn dd.getBoundingClientRect().top +\n\t\t\t\t\tparseInt(getComputedStyle(dd).maxHeight, 10);\n\t\t\t}\n\n\t\t\tfunction dropdownRow() {\n\t\t\t\treturn elem[0].querySelectorAll('.angucomplete-row')[scope.currentIndex];\n\t\t\t}\n\n\t\t\tfunction dropdownRowTop() {\n\t\t\t\treturn dropdownRow().getBoundingClientRect().top -\n\t\t\t\t\t(dd.getBoundingClientRect().top +\n\t\t\t\t\tparseInt(getComputedStyle(dd).paddingTop, 10));\n\t\t\t}\n\n\t\t\tfunction dropdownScrollTopTo(offset) {\n\t\t\t\tdd.scrollTop = dd.scrollTop + offset;\n\t\t\t}\n\n\t\t\tfunction updateInputField(){\n\t\t\t\tvar current = scope.results[scope.currentIndex];\n\t\t\t\tif (scope.matchClass) {\n\t\t\t\t\tinputField.val(extractTitle(current.originalObject));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tinputField.val(current.title);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction keydownHandler(event) {\n\t\t\t\tvar which = ie8EventNormalizer(event);\n\t\t\t\tvar row = null;\n\t\t\t\tvar rowTop = null;\n\n\t\t\t\tif (which === KEY_EN && scope.results) {\n\t\t\t\t\tif (scope.currentIndex >= 0 && scope.currentIndex < scope.results.length) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tscope.selectResult(scope.results[scope.currentIndex]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleOverrideSuggestions(event);\n\t\t\t\t\t\tclearResults();\n\t\t\t\t\t}\n\t\t\t\t\tscope.$apply();\n\t\t\t\t} else if (which === KEY_DW && scope.results) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif ((scope.currentIndex + 1) < scope.results.length && scope.showDropdown) {\n\t\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\t\tscope.currentIndex ++;\n\t\t\t\t\t\t\tupdateInputField();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isScrollOn) {\n\t\t\t\t\t\t\trow = dropdownRow();\n\t\t\t\t\t\t\tif (dropdownHeight() < row.getBoundingClientRect().bottom) {\n\t\t\t\t\t\t\t\tdropdownScrollTopTo(dropdownRowOffsetHeight(row));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (which === KEY_UP && scope.results) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tif (scope.currentIndex >= 1) {\n\t\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\t\tscope.currentIndex --;\n\t\t\t\t\t\t\tupdateInputField();\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (isScrollOn) {\n\t\t\t\t\t\t\trowTop = dropdownRowTop();\n\t\t\t\t\t\t\tif (rowTop < 0) {\n\t\t\t\t\t\t\t\tdropdownScrollTopTo(rowTop - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (scope.currentIndex === 0) {\n\t\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\t\tscope.currentIndex = -1;\n\t\t\t\t\t\t\tinputField.val(scope.searchStr);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else if (which === KEY_TAB) {\n\t\t\t\t\tif (scope.results && scope.results.length > 0 && scope.showDropdown) {\n\t\t\t\t\t\tif (scope.currentIndex === -1 && scope.overrideSuggestions) {\n\t\t\t\t\t\t\t// intentionally not sending event so that it does not\n\t\t\t\t\t\t\t// prevent default tab behavior\n\t\t\t\t\t\t\thandleOverrideSuggestions();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (scope.currentIndex === -1) {\n\t\t\t\t\t\t\t\tscope.currentIndex = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tscope.selectResult(scope.results[scope.currentIndex]);\n\t\t\t\t\t\t\tscope.$digest();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// no results\n\t\t\t\t\t\t// intentionally not sending event so that it does not\n\t\t\t\t\t\t// prevent default tab behavior\n\t\t\t\t\t\tif (scope.searchStr && scope.searchStr.length > 0) {\n\t\t\t\t\t\t\thandleOverrideSuggestions();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (which === KEY_ES) {\n\t\t\t\t\t// This is very specific to IE10/11 #272\n\t\t\t\t\t// without this, IE clears the input text\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction httpSuccessCallbackGen(str) {\n\t\t\t\treturn function(responseData, status, headers, config) {\n\t\t\t\t\t// normalize return obejct from promise\n\t\t\t\t\tif (!status && !headers && !config && responseData.data) {\n\t\t\t\t\t\tresponseData = responseData.data;\n\t\t\t\t\t}\n\t\t\t\t\tscope.searching = false;\n\t\t\t\t\tprocessResults(\n\t\t\t\t\t\textractValue(responseFormatter(responseData), scope.remoteUrlDataField),\n\t\t\t\t\t\tstr);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfunction httpErrorCallback(errorRes, status, headers, config) {\n\t\t\t\t// cancelled/aborted\n\t\t\t\tif (status === 0 || status === -1) { return; }\n\n\t\t\t\t// normalize return obejct from promise\n\t\t\t\tif (!status && !headers && !config) {\n\t\t\t\t\tstatus = errorRes.status;\n\t\t\t\t}\n\t\t\t\tif (scope.remoteUrlErrorCallback) {\n\t\t\t\t\tscope.remoteUrlErrorCallback(errorRes, status, headers, config);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (console && console.error) {\n\t\t\t\t\t\tconsole.error('http error');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction cancelHttpRequest() {\n\t\t\t\tif (httpCanceller) {\n\t\t\t\t\thttpCanceller.resolve();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getRemoteResults(str) {\n\t\t\t\tvar params = {},\n\t\t\t\t\turl = scope.remoteUrl + encodeURIComponent(str);\n\t\t\t\tif (scope.remoteUrlRequestFormatter) {\n\t\t\t\t\tparams = {params: scope.remoteUrlRequestFormatter(str)};\n\t\t\t\t\turl = scope.remoteUrl;\n\t\t\t\t}\n\t\t\t\tif (!!scope.remoteUrlRequestWithCredentials) {\n\t\t\t\t\tparams.withCredentials = true;\n\t\t\t\t}\n\t\t\t\tcancelHttpRequest();\n\t\t\t\thttpCanceller = $q.defer();\n\t\t\t\tparams.timeout = httpCanceller.promise;\n\t\t\t\t$http.get(url, params)\n\t\t\t\t\t.success(httpSuccessCallbackGen(str))\n\t\t\t\t\t.error(httpErrorCallback);\n\t\t\t}\n\n\t\t\tfunction getRemoteResultsWithCustomHandler(str) {\n\t\t\t\tcancelHttpRequest();\n\n\t\t\t\thttpCanceller = $q.defer();\n\n\t\t\t\tscope.remoteApiHandler(str, httpCanceller.promise)\n\t\t\t\t\t.then(httpSuccessCallbackGen(str))\n\t\t\t\t\t.catch(httpErrorCallback);\n\n\t\t\t\t/* IE8 compatible\n\t\t\t\t scope.remoteApiHandler(str, httpCanceller.promise)\n\t\t\t\t ['then'](httpSuccessCallbackGen(str))\n\t\t\t\t ['catch'](httpErrorCallback);\n\t\t\t\t */\n\t\t\t}\n\n\t\t\tfunction clearResults() {\n\t\t\t\tscope.showDropdown = false;\n\t\t\t\tscope.results = [];\n\t\t\t\tif (dd) {\n\t\t\t\t\tdd.scrollTop = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction initResults() {\n\t\t\t\tscope.showDropdown = displaySearching;\n\t\t\t\tscope.currentIndex = scope.focusFirst ? 0 : -1;\n\t\t\t\tscope.results = [];\n\t\t\t}\n\n\t\t\tfunction getLocalResults(str) {\n\t\t\t\tvar i, match, s, value,\n\t\t\t\t\tsearchFields = scope.searchFields.split(','),\n\t\t\t\t\tmatches = [];\n\t\t\t\tif (typeof scope.parseInput() !== 'undefined') {\n\t\t\t\t\tstr = scope.parseInput()(str);\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < scope.localData.length; i++) {\n\t\t\t\t\tmatch = false;\n\n\t\t\t\t\tfor (s = 0; s < searchFields.length; s++) {\n\t\t\t\t\t\tvalue = extractValue(scope.localData[i], searchFields[s]) || '';\n\t\t\t\t\t\tmatch = match || (value.toString().toLowerCase().indexOf(str.toString().toLowerCase()) >= 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tmatches[matches.length] = scope.localData[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tscope.searching = false;\n\t\t\t\tprocessResults(matches, str);\n\t\t\t}\n\n\t\t\tfunction checkExactMatch(result, obj, str){\n\t\t\t\tif (!str) { return false; }\n\t\t\t\tfor(var key in obj){\n\t\t\t\t\tif(obj[key].toLowerCase() === str.toLowerCase()){\n\t\t\t\t\t\tscope.selectResult(result);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfunction searchTimerComplete(str) {\n\t\t\t\t// Begin the search\n\t\t\t\tif (!str || str.length < minlength) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (scope.localData) {\n\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\tgetLocalResults(str);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (scope.remoteApiHandler) {\n\t\t\t\t\tgetRemoteResultsWithCustomHandler(str);\n\t\t\t\t} else {\n\t\t\t\t\tgetRemoteResults(str);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction processResults(responseData, str) {\n\t\t\t\tvar i, description, image, text, formattedText, formattedDesc;\n\n\t\t\t\tif (responseData && responseData.length > 0) {\n\t\t\t\t\tscope.results = [];\n\n\t\t\t\t\tfor (i = 0; i < responseData.length; i++) {\n\t\t\t\t\t\tif (scope.titleField && scope.titleField !== '') {\n\t\t\t\t\t\t\ttext = formattedText = extractTitle(responseData[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdescription = '';\n\t\t\t\t\t\tif (scope.descriptionField) {\n\t\t\t\t\t\t\tdescription = formattedDesc = extractValue(responseData[i], scope.descriptionField);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timage = '';\n\t\t\t\t\t\tif (scope.imageField) {\n\t\t\t\t\t\t\timage = extractValue(responseData[i], scope.imageField);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (scope.matchClass) {\n\t\t\t\t\t\t\tformattedText = findMatchString(text, str);\n\t\t\t\t\t\t\tformattedDesc = findMatchString(description, str);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.results[scope.results.length] = {\n\t\t\t\t\t\t\ttitle: formattedText,\n\t\t\t\t\t\t\tdescription: formattedDesc,\n\t\t\t\t\t\t\timage: image,\n\t\t\t\t\t\t\toriginalObject: responseData[i]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tscope.results = [];\n\t\t\t\t}\n\n\t\t\t\tif (scope.autoMatch && scope.results.length === 1 &&\n\t\t\t\t\tcheckExactMatch(scope.results[0],\n\t\t\t\t\t\t{title: text, desc: description || ''}, scope.searchStr)) {\n\t\t\t\t\tscope.showDropdown = false;\n\t\t\t\t} else if (scope.results.length === 0 && !displayNoResults) {\n\t\t\t\t\tscope.showDropdown = false;\n\t\t\t\t} else {\n\t\t\t\t\tscope.showDropdown = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction showAll() {\n\t\t\t\tif (scope.localData) {\n\t\t\t\t\tprocessResults(scope.localData, '');\n\t\t\t\t}\n\t\t\t\telse if (scope.remoteApiHandler) {\n\t\t\t\t\tgetRemoteResultsWithCustomHandler('');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgetRemoteResults('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscope.onFocusHandler = function() {\n\t\t\t\tif (scope.focusIn) {\n\t\t\t\t\tscope.focusIn();\n\t\t\t\t}\n\t\t\t\tif (minlength === 0 && (!scope.searchStr || scope.searchStr.length === 0)) {\n\t\t\t\t\tscope.currentIndex = scope.focusFirst ? 0 : scope.currentIndex;\n\t\t\t\t\tscope.showDropdown = true;\n\t\t\t\t\tshowAll();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.hideResults = function() {\n\t\t\t\tif (mousedownOn &&\n\t\t\t\t\t(mousedownOn === scope.id + '_dropdown' ||\n\t\t\t\t\tmousedownOn.indexOf('angucomplete') >= 0)) {\n\t\t\t\t\tmousedownOn = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thideTimer = $timeout(function() {\n\t\t\t\t\t\tclearResults();\n\t\t\t\t\t\tscope.$apply(function() {\n\t\t\t\t\t\t\tif (scope.searchStr && scope.searchStr.length > 0) {\n\t\t\t\t\t\t\t\tinputField.val(scope.searchStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}, BLUR_TIMEOUT);\n\t\t\t\t\tcancelHttpRequest();\n\n\t\t\t\t\tif (scope.focusOut) {\n\t\t\t\t\t\tscope.focusOut();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (scope.overrideSuggestions) {\n\t\t\t\t\t\tif (scope.searchStr && scope.searchStr.length > 0 && scope.currentIndex === -1) {\n\t\t\t\t\t\t\thandleOverrideSuggestions();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.resetHideResults = function() {\n\t\t\t\tif (hideTimer) {\n\t\t\t\t\t$timeout.cancel(hideTimer);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.hoverRow = function(index) {\n\t\t\t\tscope.currentIndex = index;\n\t\t\t};\n\n\t\t\tscope.selectResult = function(result) {\n\t\t\t\t// Restore original values\n\t\t\t\tif (scope.matchClass) {\n\t\t\t\t\tresult.title = extractTitle(result.originalObject);\n\t\t\t\t\tresult.description = extractValue(result.originalObject, scope.descriptionField);\n\t\t\t\t}\n\n\t\t\t\tif (scope.clearSelected) {\n\t\t\t\t\tscope.searchStr = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tscope.searchStr = result.title;\n\t\t\t\t}\n\t\t\t\tcallOrAssign(result);\n\t\t\t\tclearResults();\n\t\t\t};\n\n\t\t\tscope.inputChangeHandler = function(str) {\n\t\t\t\tif (str.length < minlength) {\n\t\t\t\t\tcancelHttpRequest();\n\t\t\t\t\tclearResults();\n\t\t\t\t}\n\t\t\t\telse if (str.length === 0 && minlength === 0) {\n\t\t\t\t\tscope.searching = false;\n\t\t\t\t\tshowAll();\n\t\t\t\t}\n\n\t\t\t\tif (scope.inputChanged) {\n\t\t\t\t\tstr = scope.inputChanged(str);\n\t\t\t\t}\n\t\t\t\treturn str;\n\t\t\t};\n\n\t\t\t// check required\n\t\t\tif (scope.fieldRequiredClass && scope.fieldRequiredClass !== '') {\n\t\t\t\trequiredClassName = scope.fieldRequiredClass;\n\t\t\t}\n\n\t\t\t// check min length\n\t\t\tif (scope.minlength && scope.minlength !== '') {\n\t\t\t\tminlength = parseInt(scope.minlength, 10);\n\t\t\t}\n\n\t\t\t// check pause time\n\t\t\tif (!scope.pause) {\n\t\t\t\tscope.pause = PAUSE;\n\t\t\t}\n\n\t\t\t// check clearSelected\n\t\t\tif (!scope.clearSelected) {\n\t\t\t\tscope.clearSelected = false;\n\t\t\t}\n\n\t\t\t// check override suggestions\n\t\t\tif (!scope.overrideSuggestions) {\n\t\t\t\tscope.overrideSuggestions = false;\n\t\t\t}\n\n\t\t\t// check required field\n\t\t\tif (scope.fieldRequired && ctrl) {\n\t\t\t\t// check initial value, if given, set validitity to true\n\t\t\t\tif (scope.initialValue) {\n\t\t\t\t\thandleRequired(true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\thandleRequired(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscope.inputType = attrs.type ? attrs.type : 'text';\n\n\t\t\t// set strings for \"Searching...\" and \"No results\"\n\t\t\tscope.textSearching = attrs.textSearching ? attrs.textSearching : TEXT_SEARCHING;\n\t\t\tscope.textNoResults = attrs.textNoResults ? attrs.textNoResults : TEXT_NORESULTS;\n\t\t\tdisplaySearching = scope.textSearching === 'false' ? false : true;\n\t\t\tdisplayNoResults = scope.textNoResults === 'false' ? false : true;\n\n\t\t\t// set max length (default to maxlength deault from html\n\t\t\tscope.maxlength = attrs.maxlength ? attrs.maxlength : MAX_LENGTH;\n\n\t\t\t// register events\n\t\t\tinputField.on('keydown', keydownHandler);\n\t\t\tinputField.on('keyup', keyupHandler);\n\n\t\t\t// set response formatter\n\t\t\tresponseFormatter = callFunctionOrIdentity('remoteUrlResponseFormatter');\n\n\t\t\t// set isScrollOn\n\t\t\t$timeout(function() {\n\t\t\t\tvar css = getComputedStyle(dd);\n\t\t\t\tisScrollOn = css.maxHeight && css.overflowY === 'auto';\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\trestrict: 'EA',\n\t\t\trequire: '^?form',\n\t\t\tscope: {\n\t\t\t\tselectedObject: '=',\n\t\t\t\tdisableInput: '=',\n\t\t\t\tinitialValue: '=',\n\t\t\t\tlocalData: '=',\n\t\t\t\tremoteUrlRequestFormatter: '=',\n\t\t\t\tremoteUrlRequestWithCredentials: '@',\n\t\t\t\tremoteUrlResponseFormatter: '=',\n\t\t\t\tremoteUrlErrorCallback: '=',\n\t\t\t\tremoteApiHandler: '=',\n\t\t\t\tid: '@',\n\t\t\t\ttype: '@',\n\t\t\t\tplaceholder: '@',\n\t\t\t\tremoteUrl: '@',\n\t\t\t\tremoteUrlDataField: '@',\n\t\t\t\ttitleField: '@',\n\t\t\t\tdescriptionField: '@',\n\t\t\t\timageField: '@',\n\t\t\t\tinputClass: '@',\n\t\t\t\tpause: '@',\n\t\t\t\tsearchFields: '@',\n\t\t\t\tminlength: '@',\n\t\t\t\tmatchClass: '@',\n\t\t\t\tclearSelected: '@',\n\t\t\t\toverrideSuggestions: '@',\n\t\t\t\tfieldRequired: '=',\n\t\t\t\tfieldRequiredClass: '@',\n\t\t\t\tinputChanged: '=',\n\t\t\t\tautoMatch: '@',\n\t\t\t\tfocusOut: '&',\n\t\t\t\tfocusIn: '&',\n\t\t\t\tinputName: '@',\n\t\t\t\tfocusFirst: '@',\n\t\t\t\tparseInput: '&'\n\t\t\t},\n\t\t\ttemplateUrl: function(element, attrs) {\n\t\t\t\treturn attrs.templateUrl || TEMPLATE_URL;\n\t\t\t},\n\t\t\tcompile: function(tElement) {\n\t\t\t\tvar startSym = $interpolate.startSymbol();\n\t\t\t\tvar endSym = $interpolate.endSymbol();\n\t\t\t\tif (!(startSym === '{{' && endSym === '}}')) {\n\t\t\t\t\tvar interpolatedHtml = tElement.html()\n\t\t\t\t\t\t.replace(/\\{\\{/g, startSym)\n\t\t\t\t\t\t.replace(/\\}\\}/g, endSym);\n\t\t\t\t\ttElement.html(interpolatedHtml);\n\t\t\t\t}\n\t\t\t\treturn link;\n\t\t\t}\n\t\t};\n\t}]);\n\n}));\n","(function () {\n\n    var customSelect2 = function ($timeout, bookmarkService) {\n\n        return {\n\n            restrict: 'EA',\n\n            scope: {\n                controltags: '=tagsattribute',\n                newitem: '=newitemattribute'\n            },\n\n            replace: false,\n\n            link: function($scope, el) {\n\n                var loaded = 0;\n                var data = [];\n\n                var that = this;\n\n                this.initSelect2 = function (el, data) {\n                    $('.loading-tags').hide();\n\n                    $(el).select2({\n                        placeholder: 'Add tags...',\n                        allowClear: true,\n                        tags: true,\n                        data: data\n                    });\n                };\n\n                $scope.$watch(\"newitem\", function (value) {\n\n                    if (value && data.length === 0) {\n\n                        bookmarkService\n                            .fetchTags()\n                            .then(function (response) {\n                                if (response.result == 'ok') {\n                                    for (var i=0; i<response.data.tags.length; i++){\n                                        var tagName = response.data.tags[i].name;\n                                        data.push({\n                                            id: tagName,\n                                            text: tagName,\n                                            selected: false\n                                        });\n                                    }\n                                }\n\n                                // Init select2 on current directive element.\n                                that.initSelect2(el, data);\n                            });\n\n                    }\n                });\n\n                $scope.$watch(\"controltags\", function (value) {\n                    var val = value || null;\n\n                    // Only once async data comes back and data\n                    // has never been populated.\n                    loaded++;\n\n                    // The first watch iteration is to check initial state. Once loaded in parent controller\n                    // this watch should iterate for a second time. Not the best solution so this needs work.\n                    if (loaded > 1 && data.length === 0) {\n\n                        bookmarkService\n                            .fetchTags()\n                            .then(function (response) {\n                                var i;\n\n                                // Convert source data structure.\n                                for (i=0; i<val.length; i++) {\n                                    data.push({\n                                        id: val[i],\n                                        text: val[i],\n                                        selected: true\n                                    });\n                                }\n\n                                if (response.result == 'ok') {\n                                    for (i=0; i<response.data.tags.length; i++){\n                                        var tagName = response.data.tags[i].name;\n\n                                        var found = false;\n                                        for (var j=0; j<data.length; j++) {\n                                            if (data[j].text == tagName) {\n                                                found = true;\n                                                break;\n                                            }\n                                        }\n\n                                        // The tag was not found in the original list of tags for the bookmark.\n                                        if (!found) {\n                                            data.push({\n                                                id: tagName,\n                                                text: tagName,\n                                                selected: false\n                                            });\n                                        }\n                                    }\n                                }\n\n                                // Init select2 on current directive element.\n                                that.initSelect2(el, data);\n\n                            });\n\n                    }\n                });\n\n            }\n        };\n    };\n\n    angular.module('bookmarksApp').\n        directive('customSelect2', [ '$timeout', 'bookmarkService', customSelect2 ]);\n\n}());\n","(function () {\n\n    var tagManager = function () {\n\n        return {\n\n            restrict: 'E',\n\n            scope: {tags: '='},\n\n            templateUrl: '/views/tagmanager-directive.html',\n\n            link: function ($scope, $element) {\n                // FIXME: this is lazy and error-prone\n                var input = angular.element($element.children()[1]);\n\n                // This adds the new tag to the tags array\n                $scope.add = function () {\n                    // somehow null value parsed\n                    if (!$scope.new_value) { // || $scope.new_value === ''\n                        $scope.new_value = \"\";\n                        return;\n                    }\n\n                    // valid hashtag (2+ chars starting with alphanumeric including underscores)\n                    var re = new RegExp('^[A-Za-z][A-Za-z0-9\\\\_]{1,}$');\n                    if (!re.test($scope.new_value)) {\n                        return;\n                    }\n\n                    // if ($scope.new_value && $scope.new_value.length < 3) {\n                    // return;\n                    // }\n\n                    // tag not already used\n                    if ($scope.tags.indexOf($scope.new_value) !== -1) {\n                        return;\n                    }\n\n                    var exists = false;\n                    $scope.tags.forEach(function (item) {\n                        if (item.toLowerCase() == $scope.new_value.toLowerCase()) {\n                            exists = true;\n                        }\n                    });\n                    if (exists) {\n                        return;\n                    }\n\n                    $scope.tags.push($scope.new_value);\n                    $scope.new_value = \"\";\n                };\n\n                // This is the ng-click handler to remove an item\n                $scope.remove = function (idx) {\n                    $scope.tags.splice(idx, 1);\n                };\n            }\n        };\n    };\n\n    angular.module('bookmarksApp').\n        directive('tagManager', tagManager);\n\n}());\n","'use strict';\n\n/**\n * Binds a ACE Editor widget\n */\nangular.module('ui.ace', [])\n\t.constant('uiAceConfig', {})\n\t.directive('uiAce', ['uiAceConfig', function (uiAceConfig) {\n\n\t\tif (angular.isUndefined(window.ace)) {\n\t\t\tthrow new Error('ui-ace need ace to work... (o rly?)');\n\t\t}\n\n\t\t/**\n\t\t * Sets editor options such as the wrapping mode or the syntax checker.\n\t\t *\n\t\t * The supported options are:\n\t\t *\n\t\t *   <ul>\n\t\t *     <li>showGutter</li>\n\t\t *     <li>useWrapMode</li>\n\t\t *     <li>onLoad</li>\n\t\t *     <li>theme</li>\n\t\t *     <li>mode</li>\n\t\t *   </ul>\n\t\t *\n\t\t * @param acee\n\t\t * @param session ACE editor session\n\t\t * @param {object} opts Options to be set\n\t\t */\n\t\tvar setOptions = function(acee, session, opts) {\n\n\t\t\t// sets the ace worker path, if running from concatenated\n\t\t\t// or minified source\n\t\t\tif (angular.isDefined(opts.workerPath)) {\n\t\t\t\tvar config = window.ace.require('ace/config');\n\t\t\t\tconfig.set('workerPath', opts.workerPath);\n\t\t\t}\n\t\t\t// ace requires loading\n\t\t\tif (angular.isDefined(opts.require)) {\n\t\t\t\topts.require.forEach(function (n) {\n\t\t\t\t\twindow.ace.require(n);\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Boolean options\n\t\t\tif (angular.isDefined(opts.showGutter)) {\n\t\t\t\tacee.renderer.setShowGutter(opts.showGutter);\n\t\t\t}\n\t\t\tif (angular.isDefined(opts.useWrapMode)) {\n\t\t\t\tsession.setUseWrapMode(opts.useWrapMode);\n\t\t\t}\n\t\t\tif (angular.isDefined(opts.showInvisibles)) {\n\t\t\t\tacee.renderer.setShowInvisibles(opts.showInvisibles);\n\t\t\t}\n\t\t\tif (angular.isDefined(opts.showIndentGuides)) {\n\t\t\t\tacee.renderer.setDisplayIndentGuides(opts.showIndentGuides);\n\t\t\t}\n\t\t\tif (angular.isDefined(opts.useSoftTabs)) {\n\t\t\t\tsession.setUseSoftTabs(opts.useSoftTabs);\n\t\t\t}\n\t\t\tif (angular.isDefined(opts.showPrintMargin)) {\n\t\t\t\tacee.setShowPrintMargin(opts.showPrintMargin);\n\t\t\t}\n\n            if (angular.isDefined(opts.maxLines)) {\n                acee.setOption(\"maxLines\", opts.maxLines);\n            }\n\n\t\t\t// commands\n\t\t\tif (angular.isDefined(opts.disableSearch) && opts.disableSearch) {\n\t\t\t\tacee.commands.addCommands([\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'unfind',\n\t\t\t\t\t\tbindKey: {\n\t\t\t\t\t\t\twin: 'Ctrl-F',\n\t\t\t\t\t\t\tmac: 'Command-F'\n\t\t\t\t\t\t},\n\t\t\t\t\t\texec: function () {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t},\n\t\t\t\t\t\treadOnly: true\n\t\t\t\t\t}\n\t\t\t\t]);\n\t\t\t}\n\n\t\t\t// Basic options\n\t\t\tif (angular.isString(opts.theme)) {\n\t\t\t\tacee.setTheme('ace/theme/' + opts.theme);\n\t\t\t}\n\t\t\tif (angular.isString(opts.mode)) {\n\t\t\t\tsession.setMode('ace/mode/' + opts.mode);\n\t\t\t}\n\t\t\t// Advanced options\n\t\t\tif (angular.isDefined(opts.firstLineNumber)) {\n\t\t\t\tif (angular.isNumber(opts.firstLineNumber)) {\n\t\t\t\t\tsession.setOption('firstLineNumber', opts.firstLineNumber);\n\t\t\t\t} else if (angular.isFunction(opts.firstLineNumber)) {\n\t\t\t\t\tsession.setOption('firstLineNumber', opts.firstLineNumber());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// advanced options\n\t\t\tvar key, obj;\n\t\t\tif (angular.isDefined(opts.advanced)) {\n\t\t\t\tfor (key in opts.advanced) {\n\t\t\t\t\t// create a javascript object with the key and value\n\t\t\t\t\tobj = { name: key, value: opts.advanced[key] };\n\t\t\t\t\t// try to assign the option to the ace editor\n\t\t\t\t\tacee.setOption(obj.name, obj.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// advanced options for the renderer\n\t\t\tif (angular.isDefined(opts.rendererOptions)) {\n\t\t\t\tfor (key in opts.rendererOptions) {\n\t\t\t\t\t// create a javascript object with the key and value\n\t\t\t\t\tobj = { name: key, value: opts.rendererOptions[key] };\n\t\t\t\t\t// try to assign the option to the ace editor\n\t\t\t\t\tacee.renderer.setOption(obj.name, obj.value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// onLoad callbacks\n\t\t\tangular.forEach(opts.callbacks, function (cb) {\n\t\t\t\tif (angular.isFunction(cb)) {\n\t\t\t\t\tcb(acee);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\treturn {\n\t\t\trestrict: 'EA',\n\t\t\trequire: '?ngModel',\n\t\t\tlink: function (scope, elm, attrs, ngModel) {\n\n\t\t\t\t/**\n\t\t\t\t * Corresponds the uiAceConfig ACE configuration.\n\t\t\t\t * @type object\n\t\t\t\t */\n\t\t\t\tvar options = uiAceConfig.ace || {};\n\n\t\t\t\t/**\n\t\t\t\t * uiAceConfig merged with user options via json in attribute or data binding\n\t\t\t\t * @type object\n\t\t\t\t */\n\t\t\t\tvar opts = angular.extend({}, options, scope.$eval(attrs.uiAce));\n\n\t\t\t\t/**\n\t\t\t\t * ACE editor\n\t\t\t\t * @type object\n\t\t\t\t */\n\t\t\t\tvar acee = window.ace.edit(elm[0]);\n\n\t\t\t\t/**\n\t\t\t\t * ACE editor session.\n\t\t\t\t * @type object\n\t\t\t\t * @see [EditSession]{@link http://ace.c9.io/#nav=api&api=edit_session}\n\t\t\t\t */\n\t\t\t\tvar session = acee.getSession();\n\n\t\t\t\t/**\n\t\t\t\t * Reference to a change listener created by the listener factory.\n\t\t\t\t * @function\n\t\t\t\t * @see listenerFactory.onChange\n\t\t\t\t */\n\t\t\t\tvar onChangeListener;\n\n\t\t\t\t/**\n\t\t\t\t * Reference to a blur listener created by the listener factory.\n\t\t\t\t * @function\n\t\t\t\t * @see listenerFactory.onBlur\n\t\t\t\t */\n\t\t\t\tvar onBlurListener;\n\n\t\t\t\t/**\n\t\t\t\t * Calls a callback by checking its existing. The argument list\n\t\t\t\t * is variable and thus this function is relying on the arguments\n\t\t\t\t * object.\n\t\t\t\t * @throws {Error} If the callback isn't a function\n\t\t\t\t */\n\t\t\t\tvar executeUserCallback = function () {\n\n\t\t\t\t\t/**\n\t\t\t\t\t * The callback function grabbed from the array-like arguments\n\t\t\t\t\t * object. The first argument should always be the callback.\n\t\t\t\t\t *\n\t\t\t\t\t * @see [arguments]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/arguments}\n\t\t\t\t\t * @type {*}\n\t\t\t\t\t */\n\t\t\t\t\tvar callback = arguments[0];\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Arguments to be passed to the callback. These are taken\n\t\t\t\t\t * from the array-like arguments object. The first argument\n\t\t\t\t\t * is stripped because that should be the callback function.\n\t\t\t\t\t *\n\t\t\t\t\t * @see [arguments]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/arguments}\n\t\t\t\t\t * @type {Array}\n\t\t\t\t\t */\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments, 1);\n\n\t\t\t\t\tif (angular.isDefined(callback)) {\n\t\t\t\t\t\tscope.$evalAsync(function () {\n\t\t\t\t\t\t\tif (angular.isFunction(callback)) {\n\t\t\t\t\t\t\t\tcallback(args);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Error('ui-ace use a function as callback.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t/**\n\t\t\t\t * Listener factory. Until now only change listeners can be created.\n\t\t\t\t * @type object\n\t\t\t\t */\n\t\t\t\tvar listenerFactory = {\n\t\t\t\t\t/**\n\t\t\t\t\t * Creates a change listener which propagates the change event\n\t\t\t\t\t * and the editor session to the callback from the user option\n\t\t\t\t\t * onChange. It might be exchanged during runtime, if this\n\t\t\t\t\t * happens the old listener will be unbound.\n\t\t\t\t\t *\n\t\t\t\t\t * @param callback callback function defined in the user options\n\t\t\t\t\t * @see onChangeListener\n\t\t\t\t\t */\n\t\t\t\t\tonChange: function (callback) {\n\t\t\t\t\t\treturn function (e) {\n\t\t\t\t\t\t\tvar newValue = session.getValue();\n\n\t\t\t\t\t\t\tif (ngModel && newValue !== ngModel.$viewValue &&\n\t\t\t\t\t\t\t\t\t// HACK make sure to only trigger the apply outside of the\n\t\t\t\t\t\t\t\t\t// digest loop 'cause ACE is actually using this callback\n\t\t\t\t\t\t\t\t\t// for any text transformation !\n\t\t\t\t\t\t\t\t!scope.$$phase && !scope.$root.$$phase) {\n\t\t\t\t\t\t\t\tscope.$evalAsync(function () {\n\t\t\t\t\t\t\t\t\tngModel.$setViewValue(newValue);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\texecuteUserCallback(callback, e, acee);\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\t/**\n\t\t\t\t\t * Creates a blur listener which propagates the editor session\n\t\t\t\t\t * to the callback from the user option onBlur. It might be\n\t\t\t\t\t * exchanged during runtime, if this happens the old listener\n\t\t\t\t\t * will be unbound.\n\t\t\t\t\t *\n\t\t\t\t\t * @param callback callback function defined in the user options\n\t\t\t\t\t * @see onBlurListener\n\t\t\t\t\t */\n\t\t\t\t\tonBlur: function (callback) {\n\t\t\t\t\t\treturn function () {\n\t\t\t\t\t\t\texecuteUserCallback(callback, acee);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tattrs.$observe('readonly', function (value) {\n\t\t\t\t\tacee.setReadOnly(!!value || value === '');\n\t\t\t\t});\n\n\t\t\t\t// Value Blind\n\t\t\t\tif (ngModel) {\n\t\t\t\t\tngModel.$formatters.push(function (value) {\n\t\t\t\t\t\tif (angular.isUndefined(value) || value === null) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (angular.isObject(value) || angular.isArray(value)) {\n\t\t\t\t\t\t\tthrow new Error('ui-ace cannot use an object or an array as a model');\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t});\n\n\t\t\t\t\tngModel.$render = function () {\n\t\t\t\t\t\tsession.setValue(ngModel.$viewValue);\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Listen for option updates\n\t\t\t\tvar updateOptions = function (current, previous) {\n\t\t\t\t\tif (current === previous) return;\n\t\t\t\t\topts = angular.extend({}, options, scope.$eval(attrs.uiAce));\n\n\t\t\t\t\topts.callbacks = [ opts.onLoad ];\n\t\t\t\t\tif (opts.onLoad !== options.onLoad) {\n\t\t\t\t\t\t// also call the global onLoad handler\n\t\t\t\t\t\topts.callbacks.unshift(options.onLoad);\n\t\t\t\t\t}\n\n\t\t\t\t\t// EVENTS\n\n\t\t\t\t\t// unbind old change listener\n\t\t\t\t\tsession.removeListener('change', onChangeListener);\n\n\t\t\t\t\t// bind new change listener\n\t\t\t\t\tonChangeListener = listenerFactory.onChange(opts.onChange);\n\t\t\t\t\tsession.on('change', onChangeListener);\n\n\t\t\t\t\t// unbind old blur listener\n\t\t\t\t\t//session.removeListener('blur', onBlurListener);\n\t\t\t\t\tacee.removeListener('blur', onBlurListener);\n\n\t\t\t\t\t// bind new blur listener\n\t\t\t\t\tonBlurListener = listenerFactory.onBlur(opts.onBlur);\n\t\t\t\t\tacee.on('blur', onBlurListener);\n\n\t\t\t\t\tsetOptions(acee, session, opts);\n\t\t\t\t};\n\n\t\t\t\tscope.$watch(attrs.uiAce, updateOptions, /* deep watch */ true);\n\n\t\t\t\t// set the options here, even if we try to watch later, if this\n\t\t\t\t// line is missing things go wrong (and the tests will also fail)\n\t\t\t\tupdateOptions(options);\n\n\t\t\t\telm.on('$destroy', function () {\n\t\t\t\t\tacee.session.$stopWorker();\n\t\t\t\t\tacee.destroy();\n\t\t\t\t});\n\n\t\t\t\tscope.$watch(function() {\n\t\t\t\t\treturn [elm[0].offsetWidth, elm[0].offsetHeight];\n\t\t\t\t}, function() {\n\t\t\t\t\tacee.resize();\n\t\t\t\t\tacee.renderer.updateFull();\n\t\t\t\t}, true);\n\n\t\t\t}\n\t\t};\n\t}]);\n"],"sourceRoot":"/source/"}